// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package container

import (
	"github.com/Maulidito/personal_project_go/controller"
	"github.com/Maulidito/personal_project_go/dataservice"
	"github.com/Maulidito/personal_project_go/middleware"
	"github.com/Maulidito/personal_project_go/models"
	"github.com/Maulidito/personal_project_go/service"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from injector.go:

func InitializeAuthMiddleware(db *gorm.DB) *middleware.JwtAuthMiddleware {
	dataServiceUser := dataservice.NewDataServiceUser()
	jwtAuthMiddleware := middleware.NewJwtAuthMiddleware(dataServiceUser, db)
	return jwtAuthMiddleware
}

func InitializedServiceAuth(db *gorm.DB) service.IServiceAuth {
	dataServiceUser := dataservice.NewDataServiceUser()
	iServiceAuth := service.NewServiceAuth(dataServiceUser, db)
	return iServiceAuth
}

func InitializedControllerUser(db *gorm.DB) controller.IController {
	dataServiceUser := dataservice.NewDataServiceUser()
	iServiceAuth := service.NewServiceAuth(dataServiceUser, db)
	jwtAuthMiddleware := InitializeAuthMiddleware(db)
	iController := controller.NewControllerUser(dataServiceUser, db, iServiceAuth, jwtAuthMiddleware)
	return iController
}

func InitializedControllerProduct(db *gorm.DB) controller.IController {
	dataServiceProduct := dataservice.NewDataServiceProduct()
	dataServiceUser := dataservice.NewDataServiceUser()
	jwtAuthMiddleware := InitializeAuthMiddleware(db)
	iController := controller.NewControllerProduct(dataServiceProduct, db, dataServiceUser, jwtAuthMiddleware)
	return iController
}

func InitializedControllerCart(db *gorm.DB) controller.IController {
	dataServiceCart := dataservice.NewDataServiceCart()
	jwtAuthMiddleware := InitializeAuthMiddleware(db)
	iController := controller.NewControllerCart(dataServiceCart, db, jwtAuthMiddleware)
	return iController
}

func InitializedControllerTrans(db *gorm.DB) controller.IController {
	dataServiceTransaction := dataservice.NewDataServiceTransaction()
	jwtAuthMiddleware := InitializeAuthMiddleware(db)
	dataServiceCart := dataservice.NewDataServiceCart()
	iController := controller.NewControllerTransaction(dataServiceTransaction, db, jwtAuthMiddleware, dataServiceCart)
	return iController
}

// injector.go:

var userSet = wire.NewSet(dataservice.NewDataServiceUser, wire.Bind(new(dataservice.IDataService[models.User]), new(*dataservice.DataServiceUser)))

var productSet = wire.NewSet(dataservice.NewDataServiceProduct, wire.Bind(new(dataservice.IDataService[models.Product]), new(*dataservice.DataServiceProduct)))

var cartSet = wire.NewSet(dataservice.NewDataServiceCart, wire.Bind(new(dataservice.IDataService[models.Cart]), new(*dataservice.DataServiceCart)))

var transSet = wire.NewSet(dataservice.NewDataServiceTransaction, wire.Bind(new(dataservice.IDataService[models.Transaction]), new(*dataservice.DataServiceTransaction)))
